name: Pack Templates

on:
  workflow_dispatch:
  release:
    types: [published]

env:
  pack-root: "${{ github.workspace }}/nupkgs"
  cert-root: "${{ github.workspace }}/certs"
  certificate: ${{ secrets.NUGET_SIGNING_CERT_BASE64 }}

jobs:

  pack-templates:
    runs-on: ubuntu-latest

    outputs:
      pack-name: ${{ steps.pack.outputs.pack-name }}

    env:
      template-pack: "source/templatepack.csproj"
      output-name: "finebits.dotnet.templates"

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: New version number
      id: version-number
      uses: finebits/github-actions/version-number@main

    - name: Pack templates
      id: pack
      run: |
        echo "pack-name=${{ env.output-name }}-v${{ env.version }}" >> $GITHUB_OUTPUT
        dotnet pack "${{ env.template-pack }}" --nologo --output="${{ env.pack-root }}" --p:PackageVersion="${{ env.version }}"
      env:
        version: ${{ steps.version-number.outputs.semantic-version }}
        
    - name: Pack signing
      if: ${{ env.certificate != '' }}
      run: |
        mkdir -p ${{ env.cert-root }}
        echo "${{ env.certificate }}" | base64 --decode > "${{ env.certificate-file }}"
        dotnet nuget sign "${{ env.pack-root }}/*.nupkg" --certificate-path="${{ env.certificate-file }}" --certificate-password="${{ secrets.NUGET_SIGNING_CERT_PASSWORD }}" --timestamper "http://timestamp.digicert.com"
      env:
        certificate-file: "${{ env.cert-root }}/cert.pfx"

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.pack-name }}
        path: |
          ${{ env.pack-root }}
      env: 
        pack-name: ${{ steps.pack.outputs.pack-name }}

  validate-templates:
    runs-on: ubuntu-latest
    needs: [ pack-templates ]
    strategy:
      matrix:
        template-name:
          [
            "finebits-console-app",
          ]
          
    env:
      template-name: ${{ matrix.template-name }}
      
    steps:
      - name: Install .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - uses: actions/download-artifact@v3
        with:
          name: ${{ env.pack-name }}
          path: ${{ env.pack-root }}
        env: 
          pack-name: ${{ needs.pack-templates.outputs.pack-name }}

      - name: Verify package
        if: ${{ env.certificate != '' }}
        run: dotnet nuget verify "${{ env.pack-root }}/*.nupkg"

      - name: Install package
        run: dotnet new install "${{ env.pack-root }}/*.nupkg"
       
      - name: Create project
        run: dotnet new ${{ env.template-name }} -o "new_project"

  deploy-templates:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: [pack-templates, validate-templates]
    steps:
      - name: Install .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - uses: actions/download-artifact@v3
        with:
          name: ${{ env.pack-name }}
          path: ${{ env.pack-root }}
        env: 
          pack-name: ${{ needs.pack-templates.outputs.pack-name }}
          
      - name: Publish NuGet package
        run: dotnet nuget push "${{ env.pack-root }}/*.nupkg" --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
        